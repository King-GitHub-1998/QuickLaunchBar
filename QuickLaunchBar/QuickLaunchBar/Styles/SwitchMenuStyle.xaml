<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
                    xmlns:CustomControls="clr-namespace:QuickLaunchBar.CustomControls">
    <!--左-->
    <Geometry x:Key="PreviousGeometry" PresentationOptions:Freeze="True">M669.143 172l-303.429 303.429 303.429 303.429q10.857 10.857 10.857 25.714t-10.857 25.714l-94.857 94.857q-10.857 10.857-25.714 10.857t-25.714-10.857l-424-424q-10.857-10.857-10.857-25.714t10.857-25.714l424-424q10.857-10.857 25.714-10.857t25.714 10.857l94.857 94.857q10.857 10.857 10.857 25.714t-10.857 25.714z</Geometry>
    <!--右-->
    <Geometry x:Key="NextGeometry" PresentationOptions:Freeze="True">M632.571 501.143l-424 424q-10.857 10.857-25.714 10.857t-25.714-10.857l-94.857-94.857q-10.857-10.857-10.857-25.714t10.857-25.714l303.429-303.429-303.429-303.429q-10.857-10.857-10.857-25.714t10.857-25.714l94.857-94.857q10.857-10.857 25.714-10.857t25.714 10.857l424 424q10.857 10.857 10.857 25.714t-10.857 25.714z</Geometry>

    <!--上-->
    <Geometry x:Key="UpGeometry" PresentationOptions:Freeze="True">M671.2832,603.3408 L516.864,491.52 362.4448,602.8288 362.4448,508.5696 516.864,397.2608 671.2832,508.5696 671.2832,603.3408 z</Geometry>
    <!--下-->
    <Geometry x:Key="DownGeometry" PresentationOptions:Freeze="True">M671.2832,492.032 L516.864,603.3408 362.3936,492.032 362.3936,397.7728 516.8128,509.0816 671.232,397.2608 671.232,492.032 z</Geometry>

    <!--<Storyboard x:Key="ScrollVerticalStoryboard">
        <DoubleAnimation Storyboard.TargetName="PART_ScrollViewer" Storyboard.TargetProperty="(CustomControls:ScrollViewerBehavior.VerticalOffsetProperty)"
                        From="0" To="500" Duration="0:0:0.6">
            <DoubleAnimation.EasingFunction>
                <CircleEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>-->

    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
    <Style x:Key="PathButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" CornerRadius="2" Background="{DynamicResource NormalBlackBrush}" Opacity=".2"></Border>
                        <ContentPresenter x:Name="contentPresenter"  HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value=".4" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="contentPresenter" Property="Margin" Value="0,1,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CustomControls:SwitchMenu">
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBlackBrush}" />
        <!--<Setter Property="BorderThickness" Value="1" />-->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CustomControls:SwitchMenu">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <!--<Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>-->

                        <ScrollViewer x:Name="PART_ScrollViewer" Grid.Row="1" Grid.Column="1" HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden">
                            <ItemsPresenter/>
                        </ScrollViewer>
                        <Rectangle x:Name="PART_Rectangle" Grid.Row="1" Grid.Column="1" StrokeThickness="4" 
                                   Stroke="{DynamicResource NormalWhiteBrush}" 
                                   StrokeDashArray="1,1" 
                                   Visibility="{TemplateBinding IsDragDrop,Converter={StaticResource booleanToVisibilityConverter}}"/>
                        <Button x:Name="PART_PreviousButton" Grid.Row="1" Grid.Column="0"  
                                Visibility="Collapsed" Style="{DynamicResource PathButtonStyle}"
                                 Width="80" Height="24">
                            <Path Margin="2" Data="{DynamicResource UpGeometry}" 
                                  Width="14" Height="10"
                                  Fill="{DynamicResource NormalWhiteBrush}" Stretch="Fill" />
                        </Button>
                        <Button x:Name="PART_NextButton" Grid.Row="1" Grid.Column="2" 
                                Visibility="Collapsed" Style="{DynamicResource PathButtonStyle}"
                                 Width="80" Height="24">
                            <Path Margin="2" Data="{DynamicResource UpGeometry}" 
                                  Width="14" Height="10"
                                  Fill="{DynamicResource NormalWhiteBrush}" Stretch="Fill" />
                        </Button>
                        <!--<Button x:Name="PART_UpButton" Grid.Row="0" Grid.Column="1"
                                Visibility="Collapsed" Style="{DynamicResource PathButtonStyle}"
                                 Width="80" Height="24">
                            <Path Margin="2" Data="{DynamicResource UpGeometry}" 
                                  Width="14" Height="10"
                                  Fill="#ffff" Stretch="Fill" />
                        </Button>
                        <Button x:Name="PART_DownButton" Grid.Row="2" Grid.Column="1"
                                 Visibility="Collapsed" Style="{DynamicResource PathButtonStyle}"
                                 Width="80" Height="24">
                            <Path Margin="2" Data="{DynamicResource DownGeometry}" 
                                  Width="14" Height="10"
                                  Fill="#ffff" Stretch="Fill"/>
                        </Button>-->

                        <Button x:Name="PART_UpButton" Grid.Column="1" VerticalAlignment="Top"
                                Visibility="Collapsed" Style="{DynamicResource PathButtonStyle}"
                                 Width="80" Height="24">
                            <Path Margin="2" Data="{DynamicResource UpGeometry}" 
                                  Width="14" Height="10"
                                  Fill="{DynamicResource NormalWhiteBrush}" Stretch="Fill" />
                        </Button>
                        <Button x:Name="PART_DownButton" Grid.Column="1" VerticalAlignment="Bottom"
                                 Visibility="Collapsed" Style="{DynamicResource PathButtonStyle}"
                                 Width="80" Height="24">
                            <Path Margin="2" Data="{DynamicResource DownGeometry}" 
                                  Width="14" Height="10"
                                  Fill="{DynamicResource NormalWhiteBrush}" Stretch="Fill"/>
                            <!--<Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard Storyboard="{StaticResource ScrollVerticalStoryboard}"/>
                                </EventTrigger>
                            </Button.Triggers>-->
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Visibility" SourceName="PART_Rectangle" Value="Collapsed"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_PreviousButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_NextButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_UpButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_DownButton" Property="Visibility" Value="Visible" />
                        </MultiTrigger>-->
                        <!--<Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="PART_PreviousButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_NextButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_UpButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_DownButton" Property="Visibility" Value="Visible" />
                        </Trigger>-->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_PreviousButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_NextButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_UpButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_DownButton" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="PART_PreviousButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_NextButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_UpButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_DownButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentControl">
                    <!--<Setter Property="Height" Value="70" />-->
                    <!--<Setter Property="Width" Value="70" />-->
                    <!--<Setter Property="Background" Value="Gray" />
                    <Setter Property="BorderBrush" Value="Black" />-->
                    <!--<Setter Property="BorderThickness" Value="0,0,0,0" />-->
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="UseLayoutRounding" Value="True" />
                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=CustomControls:SwitchMenu}}" />
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=CustomControls:SwitchMenu}}" />
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=CustomControls:SwitchMenu}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ContentControl">
                                <Border Padding="10,2" Margin="2"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <!--<ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#2B91AF" />
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </ControlTemplate.Triggers>-->
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True" Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>